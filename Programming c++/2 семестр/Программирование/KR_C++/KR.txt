// Belskaya
#include "pch.h"
#include <iostream>
using namespace std;

int add_to_array(char *str, char** substr)
{
	char *q = 0;
	int n = strlen(str);
	int i = 0;
	while (1)
	{
		q = strstr(str, " ");
		if (q != 0) 
		{
			if ((q - str) % 2 == 0)
			{
				strncpy_s(substr[i], n, str, q - str);
				i++;
			}
			str = q + 1;
		}
		else break;
	}
	return i; // количество заполненных строк матрицы
}

void Sort(char **arr, int n)
{
	bool exit = false;
	while (!exit) 
	{
		exit = true;
		for (int i = 0; i < n - 1; i++)
			if (strlen(arr[i]) > strlen(arr[i + 1]))
			{
				char* p = arr[i];
				arr[i] = arr[i + 1];
				arr[i + 1] = p;
				exit = false;
			}
	}
}

int main()
{
	int n;
	cout << "Enter n:";
	cin >> n;
	char *str = new char[n + 2]; //для пробела в конце, чтобы проверка в функции add_to_array работала
	char **newstr = new char*[n]; 
	for (int i = 0; i < n; i++)
	{
		newstr[i] = new char[n + 1]; //если в исходной строке только одно слово четной длины
	}
	cin.ignore();
	cout << "Enter your str:";
	gets_s(str, n + 1);
	strcat_s(str, n + 2, " "); 
	puts(str);
	cout << endl;
	int k = add_to_array(str, newstr);
	Sort(newstr, n);
	cout << "Your matrix:  " << endl;
	for (int i = 0; i < k; i++)
	{
		puts(newstr[i]);
	}
	cout << endl;
	delete[] str;
	for (int i = 0; i < n; i++)
		delete[] newstr[i];
	delete[] newstr;
}

